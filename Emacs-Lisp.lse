;; Copyright (C) 1997 - 2017 Peter Milliken
;;
;; Author: Peter Milliken <peter.milliken@gmail.com>
;;
;; Keywords: language sensitive abbreviation template placeholder
;;
;; GNU Emacs is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 2, or (at your option)
;; any later version.

;; GNU Emacs is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs; see the file COPYING.  If not, write to the
;; Free Software Foundation, Inc., 59 Temple Place - Suite 330,
;; Boston, MA 02111-1307, USA.

DELETE LANGUAGE "Emacs-Lisp"
DEFINE LANGUAGE "Emacs-Lisp"
    /INITIAL_STRING="{compilation_unit}"
    /PUNCTUATION_CHARACTERS=",;()*.'"
    /VALID_IDENTIFIER_CHARACTERS="a-zA-Z_0-9-"
    /INDENT_SIZE=2

END DEFINE

DELETE PLACEHOLDER COMPILATION_UNIT
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER COMPILATION_UNIT
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=NONTERMINAL

  "[file_header]"
  "[defun]..."
  "[defcustom]..."

END DEFINE

DELETE PLACEHOLDER FILE_HEADER
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER FILE_HEADER
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=NONTERMINAL

  ";;; {file-name}.el-- {package-name}"
  ";;"
  ";; Copyright (C) {year}... {author-name}"
  ";;"
  ";; Author: {author-name} [email-address]"
  ";;"
  ";; $Date[please_expand_me]$"
  ";; Version: [text]"
  ";; Keywords: [text]"
  ";;"
  ";;"
  ";; GNU Emacs is free software; you can redistribute it and/or modify"
  ";; it under the terms of the GNU General Public License as published by"
  ";; the Free Software Foundation; either version 2, or (at your option)"
  ";; any later version."
  ";;"
  ";; GNU Emacs is distributed in the hope that it will be useful,"
  ";; but WITHOUT ANY WARRANTY; without even the implied warranty of"
  ";; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"
  ";; GNU General Public License for more details."
  ";;"
  ";; You should have received a copy of the GNU General Public License"
  ";; along with GNU Emacs; see the file COPYING.  If not, write to the"
  ";; Free Software Foundation, Inc., 59 Temple Place Suite 330,"
  ";; Boston, MA 02111-1307, USA."
  ";;"
  ";;; Commentary:"
  ";;"
  ";;  [text]"
  ";;"
  ";;; Change Log:"
  ";;"
  ";;; Code:"
  ";;"

END DEFINE

DELETE PLACEHOLDER PACKAGE-NAME
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER PACKAGE-NAME
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=TERMINAL

  "Enter the name of the package"

END DEFINE

DELETE PLACEHOLDER YEAR
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER YEAR
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=", "
  /TYPE=TERMINAL

  "Enter the year of the copyright"

END DEFINE

DELETE PLACEHOLDER EMAIL-ADDRESS
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER EMAIL-ADDRESS
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=TERMINAL

  "Enter your email address"

END DEFINE

DELETE PLACEHOLDER PLEASE_EXPAND_ME
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER PLEASE_EXPAND_ME
    /LANGUAGE="Emacs-Lisp"
    /TYPE=NONTERMINAL

    ":"

END DEFINE

DELETE PLACEHOLDER AUTHOR-NAME
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER AUTHOR-NAME
  /LANGUAGE="Emacs-Lisp"
  /AUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=TERMINAL

  "Enter the name of the author"

END DEFINE


DELETE PLACEHOLDER FILE-NAME
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER FILE-NAME
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=TERMINAL

  "Please enter the name of the file"

END DEFINE

DELETE PLACEHOLDER DEFUN
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFUN
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Define a lisp function"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(defun {identifier} ([arguments]...)"
    "  [Documentation]"
    "  [interactive]"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER ARGUMENTS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ARGUMENTS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Function arguments"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=" "
    /TYPE=MENU
    
    "&optional {identifier}"/DESCRIPTION="optional argument"
    "&key {arg_default}..."/DESCRIPTION="Keyword argument with default value"

END DEFINE

DELETE PLACEHOLDER ARG_DEFAULT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ARG_DEFAULT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=" "
    /TYPE=NONTERMINAL
    
    "({identifier} {value})"

END DEFINE

DELETE PLACEHOLDER DEFVAR
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFVAR
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Define a variable"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(defvar {identifier} [value]"
    "  [Documentation])"

END DEFINE

DELETE PLACEHOLDER IDENTIFIER
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER IDENTIFIER
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=" "
    /TYPE=TERMINAL

    "Just type in a legal Elisp identifier"

END DEFINE

DELETE PLACEHOLDER DOCUMENTATION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DOCUMENTATION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp function Documentation"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ""[text]""

END DEFINE

DELETE PLACEHOLDER TEXT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER TEXT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp function template"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=" "
    /TYPE=TERMINAL

    "Just type some text"

END DEFINE

DELETE PLACEHOLDER LOCAL_DEFINITIONS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER LOCAL_DEFINITIONS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp local argument"
    /DUPLICATION=VERTICAL
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "({identifier} [value])"

END DEFINE

DELETE PLACEHOLDER VALUE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER VALUE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp local argument initialisation value"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Type a valid initialisation value that you want to use"

END DEFINE

DELETE PLACEHOLDER STATEMENT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER STATEMENT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp statement menu"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "let_statement"/PLACEHOLDER
    "if_statement"/PLACEHOLDER
    "progn_statement"/PLACEHOLDER
    "plain_statement"/PLACEHOLDER
    "cond_statement"/PLACEHOLDER
    "while_statement"/PLACEHOLDER
    "setq_stmt"/PLACEHOLDER
    "catch_stmt"/PLACEHOLDER
    "throw"/PLACEHOLDER
    "unless"/PLACEHOLDER
    "when"/PLACEHOLDER
    "dolist"/PLACEHOLDER
    "dotimes"/PLACEHOLDER
    "error"/PLACEHOLDER
    "signal"/PLACEHOLDER
    "condition-case"/PLACEHOLDER
    "unwind-protect"/PLACEHOLDER
    "property-list-stmt"/PLACEHOLDER/NOFOLLOW
    "symbols"/PLACEHOLDER/NOFOLLOW
    "sequences"/PLACEHOLDER/NOFOLLOW
    "association_lists"/PLACEHOLDER/NOFOLLOW
    "boolean-vectors"/PLACEHOLDER/NOFOLLOW
    "arrays"/PLACEHOLDER/NOFOLLOW
    "lists-sets"/PLACEHOLDER/NOFOLLOW

END DEFINE

DELETE PLACEHOLDER IF_STATEMENT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER IF_STATEMENT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="if statement"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(if {condition}"
    "    {statement}"
    "  [statement]...)"

END DEFINE

DELETE PLACEHOLDER LET_STATEMENT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER LET_STATEMENT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="let statement"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(let ([local_definitions]...)"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER PROGN_STATEMENT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER PROGN_STATEMENT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="progn statement"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(progn"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER PLAIN_STATEMENT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER PLAIN_STATEMENT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="plain statement"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "({function} [fun_arguments]...)"

END DEFINE

DELETE PLACEHOLDER FUN_ARGUMENTS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER FUN_ARGUMENTS
    /LANGUAGE="Emacs-Lisp"
    /PLACEHOLDER=IDENTIFIER

END DEFINE

DELETE PLACEHOLDER FUNCTION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER FUNCTION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="function call"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Type in a Lisp function name ie setq, assoc etc"

END DEFINE

DELETE PLACEHOLDER COND_STATEMENT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER COND_STATEMENT
    /LANGUAGE="Emacs-Lisp"
        /NOAUTO_SUBSTITUTE
        /DESCRIPTION=""
        /DUPLICATION=CONTEXT_DEPENDENT
        /SEPARATOR=""
        /TYPE=NONTERMINAL
    
        "(cond ({condition}"
        "@@@@@@@{statement}...)"
        "@@@@@@[cond_alternative]...)"

END DEFINE

DELETE PLACEHOLDER COND_ALTERNATIVE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER COND_ALTERNATIVE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="cond alternative statement"
    /DUPLICATION=VERTICAL
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "({condition}"
    " {statement}...)"

END DEFINE

DELETE PLACEHOLDER WHILE_STATEMENT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER WHILE_STATEMENT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="While statement"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(while {condition}"
    "   {statement}...)"

END DEFINE

DELETE PLACEHOLDER CONDITION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CONDITION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=" "
    /TYPE=NONTERMINAL

    "({fn} {comp-var} {comp-var})"

END DEFINE

DELETE PLACEHOLDER FN
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER FN
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Type a compare function i.e. or, and, string= etc"

END DEFINE

DELETE PLACEHOLDER COMP-VAR
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER COMP-VAR
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "type a variable (or a function that returns a value)."

END DEFINE

DELETE PLACEHOLDER DEFADVICE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFADVICE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp advice template"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(defadvice {identifier} ({ad_type} {identifier} [ad_flag]...)"
    "  [Documentation]"
    "  [interactive]"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER DEFMACRO
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFMACRO
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Define a macro"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(defmacro {identifier} ([fun_arguments])"
    "  [Documentation]"
    "  [interactive]"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER DEFALIAS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFALIAS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Define an alias"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(defalias '{identifier} '{identifier})"

END DEFINE

DELETE PLACEHOLDER AD_FLAG
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER AD_FLAG
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp advice type menu"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=" "
    /TYPE=MENU

    "activate"
    "protect"
    "compile"
    "preactivate"
    "disable"


END DEFINE

DELETE PLACEHOLDER INTERACTIVE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER INTERACTIVE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp interactive statement"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(interactive [interactive_string])"

END DEFINE

DELETE PLACEHOLDER INTERACTIVE_STRING
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER INTERACTIVE_STRING
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp function Documentation"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ""[text]""

END DEFINE

DELETE PLACEHOLDER AD_TYPE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER AD_TYPE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="lisp advice type menu"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "before"
    "around"
    "after"

END DEFINE

DELETE PLACEHOLDER DEFCONST
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFCONST
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Define a constant"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(defconst {identifier} [value]"
    "  [Documentation])"

END DEFINE

DELETE PLACEHOLDER CATCH_STMT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CATCH_STMT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(catch '{catch-name}"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER CATCH-NAME
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CATCH-NAME
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

   "Enter a valid Elisp name for the throw to identify"

END DEFINE

DELETE PLACEHOLDER SETQ_STMT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SETQ_STMT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(setq {variable} {statement})"

END DEFINE

DELETE PLACEHOLDER VARIABLE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER VARIABLE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter an elisp variable name."

END DEFINE

DELETE PLACEHOLDER DEFCUSTOM
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFCUSTOM
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=NONTERMINAL

  "(defcustom {variable} {default-value}"
  "  "{documentation}""
  "  {custom-type}..."
  "  :group {group-name})"

END DEFINE

DELETE PLACEHOLDER COMPOSITE-TYPE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER COMPOSITE-TYPE
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=MENU

  "(restricted-sexp :match-alternatives ({criteria}))"
  "(cons {car-type} {cdr-type}"
  "(list {element-types}...)"
  "(vector {element-types}...)"
  "(choice {alternative-types}...)"
  "("

END DEFINE

DELETE PLACEHOLDER CDR-TYPE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CDR-TYPE
  /LANGUAGE="Emacs-Lisp"
  /PLACEHOLDER=SIMPLE-TYPE

  "Enter a valid CDR Type i.e. symbol"

END DEFINE


DELETE PLACEHOLDER CAR-TYPE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CAR-TYPE
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=TERMINAL

  "Enter a car type i.e. string, integer etc"

END DEFINE


DELETE PLACEHOLDER CRITERIA
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CRITERIA
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=TERMINAL

  "This should be a list and each element should be one of these possibilities:"
  " "
  "predicate that is, a function of one argument that has no"
  "  side effects, and returns either `nil' or non-`nil' according"
  "  to the argument.  Using a predicate in the list says that"
  "  objects for which the predicate returns non-`nil' are"
  "  acceptable."
  ""
  "quoted constant--that is, `'OBJECT'.  This sort of element"
  "  in the list says that OBJECT itself is an acceptable value."
  "  For example,"
  ""
  "       (restricted-sexp :match-alternatives"
  "                        (integerp 't 'nil))"
  ""
  "  allows integers, `t' and `nil' as legitimate values."

END DEFINE

DELETE PLACEHOLDER ELEMENT-TYPES
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ELEMENT-TYPES
  /LANGUAGE="Emacs-Lisp"
  /PLACEHOLDER=SIMPLE-TYPE

END DEFINE

DELETE PLACEHOLDER ALTERNATIVE-TYPES
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ALTERNATIVE-TYPES
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=VERTICAL
  /SEPARATOR=""
  /TYPE=MENU

  "alternative"/PLACEHOLDER
  "simple-type"/PLACEHOLDER
  "constant"/PLACEHOLDER

END DEFINE

DELETE PLACEHOLDER ALTERNATIVE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ALTERNATIVE
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=NONTERMINAL

  "({simple-type} :tag "[text]")"

END DEFINE

DELETE PLACEHOLDER CONSTANT
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CONSTANT
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=MENU

  "(const {value})"
  "(const :tag "[text]" {value})"
  "(other :tag "[text]" {value})"
  "(function-item {function})"
  "(variable-item {variable})"
  "(set {elements}...)"
  "(repeat {element-type})"

END DEFINE

DELETE PLACEHOLDER VALUE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER VALUE
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=TERMINAL

  "Enter a value such as nil or t or 'anything else'"

END DEFINE


DELETE PLACEHOLDER SIMPLE-TYPE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SIMPLE-TYPE
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=MENU

  "'(integer)"
  "'(boolean)"
  "'(sexp)"
  "'(number)"
  "'(string)"
  "'(regexp)"
  "'(character)"
  "'(file)"
  "'(file :must-match t)"
  "'(directory)"
  "'(hook)"
  "'(symbol)"
  "'(function)"
  "'(variable)"
  "'(face)"

END DEFINE


DELETE PLACEHOLDER C-TYPE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER C-TYPE
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=MENU

  "simple-type"/PLACEHOLDER
  "composite-type"/PLACEHOLDER
  "type-keywords"/PLACEHOLDER

END DEFINE


DELETE PLACEHOLDER CUSTOM-TYPE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CUSTOM-TYPE
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=VERTICAL
  /SEPARATOR=""
  /TYPE=NONTERMINAL

  ":type {c-type}"

END DEFINE


DELETE PLACEHOLDER DEFAULT-VALUE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFAULT-VALUE
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=TERMINAL

  "Enter a default value i.e. t, nil, "diff""

END DEFINE


DELETE PLACEHOLDER VARIABLE
  /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER VARIABLE
  /LANGUAGE="Emacs-Lisp"
  /NOAUTO_SUBSTITUTE
  /DESCRIPTION=""
  /DUPLICATION=CONTEXT_DEPENDENT
  /SEPARATOR=""
  /TYPE=TERMINAL

  "Enter a variable name"

END DEFINE


DELETE PLACEHOLDER UNLESS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER UNLESS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Execute when condition is nil"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(unless {condition}"
    "    {statement}...)"

END DEFINE

DELETE PLACEHOLDER WHEN
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER WHEN
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Execute when condition is not nil"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(when {condition}"
    "    {statement}...)"

END DEFINE

DELETE PLACEHOLDER DOLIST
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DOLIST
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Iterate over a list"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(dolist ({var} {list} [result])"
    "    {statement}...)"

END DEFINE

DELETE PLACEHOLDER VAR
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER VAR
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter a variable name"

END DEFINE

DELETE PLACEHOLDER LIST
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER LIST
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter the name of a list or an actual list i.e. (2 3)"

END DEFINE

DELETE PLACEHOLDER RESULT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER RESULT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "nil"
    "var"/PLACEHOLDER
    "expression"/PLACEHOLDER

END DEFINE

DELETE PLACEHOLDER DOTIMES
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DOTIMES
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Repeat a set of statements a fixed number of times."
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(dotimes ({var} {count} [result])"
    "    {statement}...)"

END DEFINE

DELETE PLACEHOLDER COUNT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER COUNT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter the number of times the loop should repeat."

END DEFINE

DELETE PLACEHOLDER THROW
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER THROW
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(throw {catch-name} {result})"

END DEFINE

DELETE PLACEHOLDER ERROR
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ERROR
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(error {format-string} [rest_args])"

END DEFINE

DELETE PLACEHOLDER FORMAT-STRING
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER FORMAT-STRING
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="String format"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ""{text}""

END DEFINE

DELETE PLACEHOLDER SIGNAL
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SIGNAL
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Signal an error "
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(signal '{err-symbol} {data})"

END DEFINE

DELETE PLACEHOLDER ERR-SYMBOL
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ERR-SYMBOL
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Error Symbol i.e. 'wrong-number-of-arguments"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter an error symbol i.e. 'wong-number-of-arguments."

END DEFINE

DELETE PLACEHOLDER DATA
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DATA
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="List of addition Lisp objects relevant to the error."
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter a list of additional Lisp objects relevant to the error"
    "i.e. '(x y) or '("My unknown error condition")"

END DEFINE

DELETE PLACEHOLDER CONDITION-CASE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CONDITION-CASE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Establish error handlers around protected forms"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(condition-case [var]"
    "    {protected-forms}"
    "    {handlers}...)"

END DEFINE

DELETE PLACEHOLDER PROTECTED-FORMS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER PROTECTED-FORMS
    /LANGUAGE="Emacs-Lisp"
    /PLACEHOLDER=STATEMENT

END DEFINE

DELETE PLACEHOLDER HANDLERS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER HANDLERS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="condition-case handlers"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(({error-cond-name}...)"
    "    {statement}...)"

END DEFINE

DELETE PLACEHOLDER ERROR-COND-NAME
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ERROR-COND-NAME
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Name of the error condition"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=" "
    /TYPE=TERMINAL

    "Enter the name of an error condition i.e. arith-error, file-error"

END DEFINE

DELETE PLACEHOLDER REST_ARGS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER REST_ARGS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter the arguments for the format string."

END DEFINE

DELETE PLACEHOLDER UNWIND-PROTECT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER UNWIND-PROTECT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Return a data structure to a consistant state in the event of an error"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(unwind-protect"
    "    {statement}..."
    "    {cleanup-forms})"

END DEFINE

DELETE PLACEHOLDER CLEANUP-FORMS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CLEANUP-FORMS
    /LANGUAGE="Emacs-Lisp"
    /PLACEHOLDER=STATEMENT

END DEFINE

DELETE PLACEHOLDER PROPERTY-LIST-STMT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER PROPERTY-LIST-STMT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Property List Statements"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "(symbol-plist {symbol})"
    "(setplist {symbol} {plist})"
    "(get {symbol} {property})"
    "(put {symbol} {property} {value})"

END DEFINE

DELETE PLACEHOLDER SYMBOL
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SYMBOL
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Emacs variable"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter the name of a symbol i.e. 'foo"

END DEFINE

DELETE PLACEHOLDER PLIST
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER PLIST
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Property List"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter a property list i.e. '(a 1 b (2 3) c nil)"

END DEFINE

DELETE PLACEHOLDER PROPERTY
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER PROPERTY
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Property"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter the name of a property i.e. the property list is "
    "'(a 1 b (2 3) c nil) then a property of this property list"
    "would be 'a"

END DEFINE

DELETE PLACEHOLDER SYMBOLS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SYMBOLS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Statements dealing with Symbols i.e. intern, make-symbol etc"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "(symbol-name {symbol})"
    "(make-symbol {string})"
    "(intern {symbol} [obarray])"
    "(intern-soft {symbol} [obarray])"
    "(mapatoms {function} [obarray])"
    "(unintern {symbol} [obarray])"

END DEFINE

DELETE PLACEHOLDER OBARRAY
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER OBARRAY
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Name of an obarray"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter the name of an obarray (declared using make-vector)"

END DEFINE

DELETE PLACEHOLDER FUNCTION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER FUNCTION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter a function name i.e. 'foo"

END DEFINE

DELETE PLACEHOLDER NAME
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER NAME
    /LANGUAGE="Emacs-Lisp"
    /PLACEHOLDER=TEXT

END DEFINE

DELETE PLACEHOLDER SEQUENCES
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SEQUENCES
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Commands that operate on sequences i.e. length, elt"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "length"/PLACEHOLDER
    "elt"/PLACEHOLDER
    "(copy-sequence {var})"

END DEFINE

DELETE PLACEHOLDER LENGTH
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER LENGTH
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Return the length of the sequence"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(length {var})"

END DEFINE

DELETE PLACEHOLDER ELT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ELT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Return the 'index item from the sequence"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(elt {var} {index})"

END DEFINE

DELETE PLACEHOLDER INDEX
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER INDEX
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Index into the list/sequence 0 is the first element"

END DEFINE

DELETE PLACEHOLDER ASSOCIATION_LISTS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ASSOCIATION_LISTS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Association List commands i.e. assoc, copy-alist"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "assoc"/PLACEHOLDER
    "rassoc"/PLACEHOLDER
    "assq"/PLACEHOLDER
    "rassq"/PLACEHOLDER
    "assoc-default"/PLACEHOLDER
    "copy-alist"/PLACEHOLDER
    "assq-delete-all"/PLACEHOLDER

END DEFINE

DELETE PLACEHOLDER ASSOC
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ASSOC
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(assoc {key} {alist})"

END DEFINE

DELETE PLACEHOLDER ASSQ-DELETE-ALL
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ASSQ-DELETE-ALL
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Delete from alist all elements whose CAR is key, return alist"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(assq-delete-all {key} {alist})"

END DEFINE

DELETE PLACEHOLDER COPY-ALIST
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER COPY-ALIST
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Copy the alist"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(copy-alist {alist})"

END DEFINE

DELETE PLACEHOLDER ASSOC-DEFAULT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ASSOC-DEFAULT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Search alist for key using optional test function"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(assoc-default {key} {alist} [{function} {default-value}])"

END DEFINE

DELETE PLACEHOLDER RASSQ
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER RASSQ
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Similar to RASSOC except eq used instead of equal"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(rassq {value} {alist})"

END DEFINE

DELETE PLACEHOLDER ASSQ
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ASSQ
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Similar to ASSOC except eq used"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(assq {key} {alist})"

END DEFINE

DELETE PLACEHOLDER RASSOC
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER RASSOC
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="return the first association with a value of value in the alist"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(rassoc {value} {alist})"

END DEFINE

DELETE PLACEHOLDER ASSOC
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ASSOC
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Return the first association for key in the alist using equal"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(assoc {key} {alist})"

END DEFINE

DELETE PLACEHOLDER ALIST
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ALIST
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Association list of the form ((a . 1) ("b" (2 3)))"

END DEFINE

DELETE PLACEHOLDER KEY
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER KEY
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Key to an alist"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter a key to an alist i.e. 'yellow"

END DEFINE

DELETE PLACEHOLDER STRING
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER STRING
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ""{text}""

END DEFINE

DELETE PLACEHOLDER BOOLEAN-VECTORS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER BOOLEAN-VECTORS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Boolean vector commands"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "make-bool-vector"/PLACEHOLDER
    "bool-vector-p"/PLACEHOLDER
    "bool-vector-exclusive-or"/PLACEHOLDER
    "bool-vector-union"/PLACEHOLDER
    "bool-vector-intersection"/PLACEHOLDER
    "bool-vector-set-difference"/PLACEHOLDER
    "bool-vector-not"/PLACEHOLDER

END DEFINE

DELETE PLACEHOLDER MAKE-BOOL-VECTOR
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER MAKE-BOOL-VECTOR
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(make-bool-vector {vect-length} {initial})"

END DEFINE

DELETE PLACEHOLDER BOOL-VECTOR-P
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER BOOL-VECTOR-P
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Test if object is a boolean vector"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(bool-vector-p {object})"

END DEFINE

DELETE PLACEHOLDER BOOL-VECTOR-EXCLUSIVE-OR
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER BOOL-VECTOR-EXCLUSIVE-OR
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Return a bitwise exclusive or of vectors"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(bool-vector-exclusive-or {object} {object} [result])"

END DEFINE

DELETE PLACEHOLDER BOOL-VECTOR-UNION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER BOOL-VECTOR-UNION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Return union of vectors, optionally storing result"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(bool-vector-union {object} {object} [result])"

END DEFINE

DELETE PLACEHOLDER BOOL-VECTOR-INTERSECTION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER BOOL-VECTOR-INTERSECTION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Return the intersection of the vectors"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(bool-vector-intersection {object} {object} [result])"

END DEFINE

DELETE PLACEHOLDER BOOL-VECTOR-SET-DIFFERENCE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER BOOL-VECTOR-SET-DIFFERENCE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Return the set difference"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(bool-vector-set-difference {object} {object} [result])"

END DEFINE

DELETE PLACEHOLDER BOOL-VECTOR-NOT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER BOOL-VECTOR-NOT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Return set complement of object"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(bool-vector-not {object} [result])"

END DEFINE

DELETE PLACEHOLDER INITIAL
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER INITIAL
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter the initial value for each boolean element i.e. t or nil"

END DEFINE


DELETE PLACEHOLDER VECT-LENGTH
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER VECT-LENGTH
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter a length for the vector"

END DEFINE

DELETE PLACEHOLDER ARRAYS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ARRAYS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Array commands"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "arrayp"/PLACEHOLDER
    "aref"/PLACEHOLDER
    "aset"/PLACEHOLDER
    "fillarray"/PLACEHOLDER

END DEFINE

DELETE PLACEHOLDER FILLARRAY
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER FILLARRAY
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Fill array with object"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(fillarray {array} {object})"

END DEFINE

DELETE PLACEHOLDER ASET
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ASET
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="set the indexth element of array to object"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(aset {array} {index} {object})"

END DEFINE

DELETE PLACEHOLDER ARRAYP
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ARRAYP
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Test if an array"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(arrayp {object})"

END DEFINE

DELETE PLACEHOLDER AREF
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER AREF
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="return the indexth element of array"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(aref {array} {index})"

END DEFINE

DELETE PLACEHOLDER ARRAY
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ARRAY
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter an array name"

END DEFINE

DELETE PLACEHOLDER OBJECT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER OBJECT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter an object name i.e. foo"

END DEFINE

DELETE PLACEHOLDER LISTS-SETS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER LISTS-SETS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Using lists as sets"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "memq"/PLACEHOLDER
    "member"/PLACEHOLDER
    "member-ignore-case"/PLACEHOLDER
    "delq"/PLACEHOLDER
    "delete"/PLACEHOLDER
    "remove"/PLACEHOLDER
    "delete-dups"/PLACEHOLDER

END DEFINE

DELETE PLACEHOLDER REMOVE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER REMOVE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="non-destructively remove all objects in sequence"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(remove {object} {sequence})"

END DEFINE

DELETE PLACEHOLDER DELETE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DELETE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Destructively delete all object in sequence"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(delete {object} {sequence})"

END DEFINE

DELETE PLACEHOLDER DELETE-DUPS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DELETE-DUPS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Delete all duplicates using equal"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(delete-dups {list})"

END DEFINE

DELETE PLACEHOLDER SEQUENCE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SEQUENCE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Enter the name of a sequence i.e. 'foo"

END DEFINE

DELETE PLACEHOLDER MEMBER
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER MEMBER
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Test for membership using equal"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(member {object} {list})"

END DEFINE

DELETE PLACEHOLDER MEMBER-IGNORE-CASE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER MEMBER-IGNORE-CASE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Like member except ignores the case"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(member-ignore-case {object} {list})"

END DEFINE

DELETE PLACEHOLDER DELQ
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DELQ
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Delete all object in the set/list using eq"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(delq {object} {list})"

END DEFINE

DELETE PLACEHOLDER IGNORE-CASE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER IGNORE-CASE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Ignore case when testing for membership (strings)"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(member-ignore-case {object} {list})"

END DEFINE

DELETE PLACEHOLDER MEMQ
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER MEMQ
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Test if object is a member of list"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(memq {object} {list})"

END DEFINE

DELETE PLACEHOLDER DEFCLASS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFCLASS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "(defclass {class-name} ([superclass-name])"
    " ({slot}...)"
     " {text}"
    " [options-and-docs])"

END DEFINE

DELETE PLACEHOLDER SLOT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SLOT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=VERTICAL
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "({name} {tag}...)"

END DEFINE

DELETE PLACEHOLDER TAG
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER TAG
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=VERTICAL
    /SEPARATOR=""
    /TYPE=MENU

    "initarg"/PLACEHOLDER
    "initform"/PLACEHOLDER
    "type"/PLACEHOLDER
    "allocation"/PLACEHOLDER
    "documentation"/PLACEHOLDER
    "accessor"/PLACEHOLDER
    "writer"/PLACEHOLDER
    "reader"/PLACEHOLDER
    "custom"/PLACEHOLDER
    "label"/PLACEHOLDER
    "group"/PLACEHOLDER
    "printer"/PLACEHOLDER

END DEFINE

DELETE PLACEHOLDER INITARG
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER INITARG
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="A symbol that can be used in the argument list of the constructor"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    ":initarg :{name}"

END DEFINE

DELETE PLACEHOLDER INITFORM
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER INITFORM
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    ":initform "[text]""

END DEFINE

DELETE PLACEHOLDER TYPE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER TYPE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="An unquoted type specifier used to validate data set into this slot"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    ":type {type-predicate}"

END DEFINE

DELETE PLACEHOLDER TYPE-PREDICATE
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER TYPE-PREDICATE
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "symbol"/DESCRIPTION="a symbol"
    "number"/DESCRIPTION="a number type"
    "{class-object}"/DESCRIPTION="An object of your class"
    "(or null symbol)"/DESCRIPTION="A symbol, or nil"

END DEFINE

DELETE PLACEHOLDER ALLOCATION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ALLOCATION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":allocation {how-data-is-stored}"

END DEFINE

DELETE PLACEHOLDER HOW-DATA-IS-STORED
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER HOW-DATA-IS-STORED
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    ":class"
    ":instance"/DESCRIPTION="default"

END DEFINE

DELETE PLACEHOLDER OPTION_DOCUMENTATION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER OPTION_DOCUMENTATION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Documentation detailing use of the slot"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":documentation "{text}""

END DEFINE

DELETE PLACEHOLDER ACCESSOR
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ACCESSOR
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Name of a generic function used to fetch the value of the slot"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":accessor {text}"

END DEFINE

DELETE PLACEHOLDER WRITER
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER WRITER
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Name of a generic function which will write to this slot"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":writer {text}"

END DEFINE

DELETE PLACEHOLDER READER
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER READER
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Name of a generic function which will read this slot"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":reader {text}"

END DEFINE

DELETE PLACEHOLDER CUSTOM
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CUSTOM
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="A custom :type specifier used when editing an object of this type"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":custom {text}"

END DEFINE

DELETE PLACEHOLDER LABEL
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER LABEL
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="When customizing an object, the value of :label will be used instead of the slot name"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":label {text}"

END DEFINE

DELETE PLACEHOLDER GROUP
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER GROUP
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Similar to defcustoms :group command"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":group {text}"

END DEFINE

DELETE PLACEHOLDER PRINTER
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER PRINTER
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="argument is a symbol which is a function name"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":printer {text}"

END DEFINE

DELETE PLACEHOLDER OPTIONS-AND-DOCS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER OPTIONS-AND-DOCS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "{class-option}..."

END DEFINE

DELETE PLACEHOLDER CLASS-OPTION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CLASS-OPTION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=VERTICAL
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    "{option} {text}"

END DEFINE

DELETE PLACEHOLDER OPTION
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER OPTION
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU

    "option_documentation"/PLACEHOLDER
    "allow-nil-initform"/PLACEHOLDER
    "abstract"/PLACEHOLDER
    "custom-groups"/PLACEHOLDER
    "method-invocation-order"/PLACEHOLDER
    "breadth-first"/PLACEHOLDER
    "depth-first"/PLACEHOLDER
    "c3"/PLACEHOLDER
    "metaclass"/PLACEHOLDER
    "default-initargs"/PLACEHOLDER

END DEFINE

DELETE PLACEHOLDER ALLOW-NIL-INITFORM
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ALLOW-NIL-INITFORM
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="If non-nil and :initform is nil but the :type is..."
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":allow-nil-initform {text}"

END DEFINE

DELETE PLACEHOLDER ABSTRACT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ABSTRACT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="A class which is :abstract cannot be instantiated, it defines an interface"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":abstract"

END DEFINE

DELETE PLACEHOLDER CUSTOM-GROUPS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CUSTOM-GROUPS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="list of groups that can be customised with this class"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":custom-groups {text}..."

END DEFINE

DELETE PLACEHOLDER METHOD-INVOCATION-ORDER
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER METHOD-INVOCATION-ORDER
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="control order of method resolution for :primary methods in multiple inheritance"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":method-invocation-order {text}..."

END DEFINE

DELETE PLACEHOLDER BREADTH-FIRST
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER BREADTH-FIRST
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="default search for methods in breadth first order"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":breadth-first"

END DEFINE

DELETE PLACEHOLDER DEPTH-FIRST
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEPTH-FIRST
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="search for methods in depth first order"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":depth-first"

END DEFINE

DELETE PLACEHOLDER C3
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER C3
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="search for methods in a linearized way (see CLOS)"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":c3"

END DEFINE

DELETE PLACEHOLDER METACLASS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER METACLASS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Unsupported CLOS option"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL

    ":metaclass"

END DEFINE

DELETE PLACEHOLDER DEFAULT-INITARGS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFAULT-INITARGS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Unsupported CLOS option"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    ":default-initargs"

END DEFINE

DELETE PLACEHOLDER NAME
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER NAME
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL

    "Type a (variable) name"

END DEFINE

DELETE PLACEHOLDER CLASS-NAME
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CLASS-NAME
    /LANGUAGE="Emacs-Lisp"
    /PLACEHOLDER=NAME

END DEFINE

DELETE PLACEHOLDER SUPERCLASS-NAME
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SUPERCLASS-NAME
    /LANGUAGE="Emacs-Lisp"
    /PLACEHOLDER=NAME

END DEFINE

DELETE PLACEHOLDER DEFMETHOD
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFMETHOD
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(defmethod {identifier} ([defun_arguments]...)"
    "  [Documentation]"
    "  [interactive]"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER CL-DEFUN
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CL-DEFUN
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Common Lisp defun"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(cl-defun {identifier} ([arg_list])"
    "  [Documentation]"
    "  [interactive]"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER CL-DEFMETHOD
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CL-DEFMETHOD
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(cl-defmethod {identifier} ([arg_list])"
    "  [Documentation]"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER CL-DEFGENERIC
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CL-DEFGENERIC
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(cl-defgeneric {identifier} ([arg_list])"
    "  [Documentation]"
    "  {statement}...)"

END DEFINE

DELETE PLACEHOLDER ARG_LIST
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER ARG_LIST
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Common Lisp Argument List"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "[defun_arguments]... [optional args] [rest args] [key args]"

END DEFINE

DELETE PLACEHOLDER "OPTIONAL ARGS"
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER "OPTIONAL ARGS"
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "&optional {local_definitions}..."

END DEFINE

DELETE PLACEHOLDER "REST ARGS"
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER "REST ARGS"
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "&rest {defun_arguments}..."

END DEFINE

DELETE PLACEHOLDER "KEY ARGS"
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER "KEY ARGS"
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "&key {local_definitions}..."

END DEFINE

DELETE PLACEHOLDER CL-PSETQ
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CL-PSETQ
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Assignments done in parallel"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(cl-psetq {sym-form}...)"

END DEFINE

DELETE PLACEHOLDER CL-PSETF
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CL-PSETF
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="[text]"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(cl-psetf {sym-form}...)"

END DEFINE

DELETE PLACEHOLDER SYM-FORM
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER SYM-FORM
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="[text]"
    /DUPLICATION=VERTICAL
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "{symbol} [form]"

END DEFINE

DELETE PLACEHOLDER FORM
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER FORM
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="[text]"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "({lisp expression})"

END DEFINE

DELETE PLACEHOLDER "LISP EXPRESSION"
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER "LISP EXPRESSION"
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="[text]"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL
    
    "Enter a valid lisp expression i.e. < 2 3"

END DEFINE

DELETE PLACEHOLDER CL-INCF
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CL-INCF
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="[text]"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(cl-incf {variable} [increment])"

END DEFINE

DELETE PLACEHOLDER CL-DECF
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER CL-DECF
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="[text]"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(cl-decf {variable} [decrement])"

END DEFINE

DELETE PLACEHOLDER INCREMENT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER INCREMENT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="[text]"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL
    
    "enter the amount to increment by"

END DEFINE

DELETE PLACEHOLDER DECREMENT
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DECREMENT
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="[text]"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL
    
    "enter the amount to decrement by"

END DEFINE

DELETE PLACEHOLDER DEFGROUP
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER DEFGROUP
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION="Define a new group"
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=NONTERMINAL
    
    "(defgroup {identifier} [value]"
    "  [Documentation]"
    "  {keywords}...)"

END DEFINE

DELETE PLACEHOLDER KEYWORDS
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER KEYWORDS
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=MENU
    
    ":tag {text}"
    ":prefix {text}"
    ":group {text}"
    ":load {text}"
    ":require {text}"/DESCRIPTION="Execute (require 'feature) when your saved customisation changes the value of this item"
    ":version {text}"/DESCRIPTION="Version information must be a string"

END DEFINE

DELETE PLACEHOLDER GROUP-NAME
    /LANGUAGE="Emacs-Lisp"
DEFINE PLACEHOLDER GROUP-NAME
    /LANGUAGE="Emacs-Lisp"
    /NOAUTO_SUBSTITUTE
    /DESCRIPTION=""
    /DUPLICATION=CONTEXT_DEPENDENT
    /SEPARATOR=""
    /TYPE=TERMINAL
    
    "Group name i.e. 'ELSE"

END DEFINE


;;; DELETE PLACEHOLDER LANGUAGE-NAME
;;;     /LANGUAGE="Template"
;;; DEFINE PLACEHOLDER LANGUAGE-NAME
;;;     /LANGUAGE="Template"
;;;     /AUTO_SUBSTITUTE
;;;     /DESCRIPTION="[text]"
;;;     /DUPLICATION=CONTEXT_DEPENDENT
;;;     /SEPARATOR=""
;;;     /TYPE=NONTERMINAL
;;;     
;;;     "Emacs-Lisp"
;;; 
;;; END DEFINE
